Searching Algorithms


Searching Algorithms are designed to check for an element or retrieve an element from any data structure where it is stored.
Based on the type of search operation, these algorithms are generally classified into two categories:

Sequential Search:
In this, the list or array is traversed sequentially and every element is checked.
For example:

Linear Search.
sırayla bastan sona tek tek gezer


Interval Search:

These algorithms are specifically designed for searching in sorted data-structures.
These type of searching algorithms are much more efficient than Linear Search as they repeatedly target the center of the search structure and divide the search space in half.
For Example:

Binary Search.
binary tree mantıgında calısır,
istenin ortasından baslar büyük icin saga gıder kucuk cın sola gıder

Jump Search
Difficulty Level : Easy
Last Updated : 22 Mar, 2021
Like Binary Search, Jump Search is a searching algorithm for sorted arrays. The basic idea is to check fewer elements (than linear search) by jumping ahead by fixed steps or skipping some elements in place of searching all elements.

For example, suppose we have an array arr[] of size n and block (to be jumped) size m. Then we search at the indexes arr[0], arr[m], arr[2m]…..arr[km] and so on

STEP 1: Jump from index 0 to index 4;
STEP 2: Jump from index 4 to index 8;
STEP 3: Jump from index 8 to index 12;
STEP 4: Since the element at index 12 is greater than 55 we will jump back a step to come to index 8.
STEP 5: Perform linear search from index 8 to get the element 55.